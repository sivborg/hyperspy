name: Release
# This workflow builds the wheels "on tag".
# If run from the hyperspy/hyperspy repository, the wheels will be uploaded to pypi ;
# otherwise, the wheels will be available as a github artifact.
on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  create_release:
    permissions:
      contents: write
    name: Create Release
    runs-on: ubuntu-latest
    outputs: 
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

  build_wheels:
    name: Wheels on ${{ matrix.os }}/py${{ matrix.python-version }}
    needs: create_release
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macos-latest]
        python-version: ['3.7', '3.8', '3.9', '3.10']

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        name: Install Python
        with:
          python-version: ${{ matrix.python-version }}

      - name: What OS and Python version
        run: |
          uname -a
          python --version
          which python

      - name: install build and twine
        run: |
          python -m pip install --upgrade pip
          python -m pip install build twine

      - name: Build wheels
        run: |
          python -m build

      - name: Display content dist folder
        run: |
          ls dist/

      - name: Install and test distribution
        env:
          MPLBACKEND: agg
        run: |
          pip install --pre --find-links dist hyperspy[tests]
          pytest --pyargs hyperspy

      - uses: actions/upload-artifact@v3
        with:
          path: ./dist/*.whl

      - name: Publish wheels to PyPI
        if: github.repository_owner == 'hyperspy'
        env:
          # Github secret set in the hyperspy/hyperspy repository
          # Not available from fork or pull request
          # Secrets are not passed to workflows that are triggered by a pull request from a fork
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          twine upload dist/*.whl --verbose

  build_wheels_linux:
    name: Wheels on ubuntu-latest
    needs: create_release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.8

      - name: install twine
        run: |
          python -m pip install twine

      - name: Build source distribution
        run: |
          pip install build
          python -m build --sdist

      - name: Build manylinux Python wheels
        uses: RalfG/python-wheels-manylinux-build@v0.7.1
        with:
          python-versions: 'cp37-cp37m cp38-cp38 cp39-cp39 cp310-cp310'
          build-requirements: 'cython'

      - name: Display content dist folder
        run: |
          ls dist/

      - name: Install and test distribution
        env:
          MPLBACKEND: agg
        run: |
          pip install --pre --find-links dist hyperspy[tests]
          pytest --pyargs hyperspy

      - uses: actions/upload-artifact@v3
        with:
          path: |
            ./dist/*-manylinux*.whl
            ./sdist/*.tar.gz

      - name: Publish wheels to PyPI
        if: github.repository_owner == 'hyperspy'
        env:
          # Github secret set in the hyperspy/hyperspy repository
          # Not available from fork or pull request
          # Secrets are not passed to workflows that are triggered by a pull request from a fork
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          twine upload dist/*-manylinux*.whl --verbose 
          twine upload dist/*.tar.gz --verbose 

